#!/bin/bash

# Termux SMS spammer made by BuriXon-code (c) 2024
# version 1.0

CACHE_FILE="$HOME/.sms_spammer_cache.txt"
DELAY=10
COUNT=0
MESSAGE_TEXT=""
MESSAGE_RANDOM=0
MESSAGE_FILE=""
NUMBERS=""
SIM=""
SIM_ID=""

function usage {
	echo -e "\e[38;5;33mUsage: $(basename $0) -n <numbers> -s <sim> -c <count> [options]\e[0m"
	echo -e "\t\e[38;5;76m-n --numbers\e[0m    Comma-separated list of phone numbers (e.g., 123456789,+48987654321,999444666)"
	echo -e "\t\e[38;5;76m-s --sim\e[0m        SIM slot to use (1 for SIM1 or 2 for SIM2)"
	echo -e "\t\e[38;5;76m-c --count\e[0m      Number of SMS to send (required)"
	echo -e "\t\e[38;5;76m-d --delay\e[0m      Delay between sending SMS (default: 10 seconds)"
	echo -e "\t\e[38;5;76m-mt --message-text\e[0m   Send text message provided via command line"
	echo -e "\t\e[38;5;76m-mr --message-random\e[0m Send message with random characters of specified length"
	echo -e "\t\e[38;5;76m-mf --message-file\e[0m   Send message from a file"
	echo -e "\t\e[38;5;76m-h --help\e[0m       Show this help message"
}

function error_message {
	echo -e "\e[38;5;196mERROR: $1\e[0m"
	usage
	exit 1
}

function check_termux_sms_send {
	if ! command -v termux-sms-send &> /dev/null; then
		error_message "termux-sms-send command not found. Make sure Termux:API is installed and configured."
	fi
}

function generate_random_message {
	local length=$1
	tr -dc 'A-Za-z0-9' </dev/urandom | head -c "$length"
}

MESSAGE_MODE_COUNT=0

while [[ $# -gt 0 ]]; do
	case "$1" in
		-mt|--message-text)
			MESSAGE_TEXT="$2"
			MESSAGE_MODE_COUNT=$((MESSAGE_MODE_COUNT + 1))
			MESSAGE_RANDOM=""
			MESSAGE_FILE=""
			shift 2
			;;
		-mr|--message-random)
			MESSAGE_RANDOM="$2"
			if [[ ! "$MESSAGE_RANDOM" =~ ^[0-9]+$ || "$MESSAGE_RANDOM" -lt 1 ]]; then
				error_message "Random message length must be a positive integer greater than 0."
			fi
			MESSAGE_MODE_COUNT=$((MESSAGE_MODE_COUNT + 1))
			MESSAGE_TEXT=""
			MESSAGE_FILE=""
			shift 2
			;;
		-mf|--message-file)
			MESSAGE_FILE="$2"
			if [[ ! -f "$MESSAGE_FILE" ]]; then
				error_message "The file '$MESSAGE_FILE' does not exist or is inaccessible."
			fi
			MESSAGE_MODE_COUNT=$((MESSAGE_MODE_COUNT + 1))
			MESSAGE_RANDOM=""
			MESSAGE_TEXT=""
			shift 2
			;;
		-n|--numbers)
			NUMBERS="$2"
			IFS=',' read -r -a NUMBER_LIST <<< "$NUMBERS"
			for NUMBER in "${NUMBER_LIST[@]}"; do
				if [[ ! "$NUMBER" =~ ^(\+?[0-9]+[- ]*)*$ ]]; then
					error_message "Invalid phone number format: $NUMBER. Ensure it starts with an optional '+' followed by digits, spaces, or dashes."
				fi
			done
			shift 2
			;;
		-s|--sim)
			SIM="$2"
			if [[ "$SIM" == "1" ]]; then
				SIM_ID=0
			elif [[ "$SIM" == "2" ]]; then
				SIM_ID=1
			else
				error_message "Invalid SIM slot. Use '1' for SIM 1 or '2' for SIM 2."
			fi
			shift 2
			;;
		-c|--count)
			COUNT="$2"
			if [[ ! "$COUNT" =~ ^[0-9]+$ || "$COUNT" -lt 1 ]]; then
				error_message "Count must be a positive integer greater than 0."
			fi
			shift 2
			;;
		-d|--delay)
			DELAY="$2"
			if [[ ! "$DELAY" =~ ^[0-9]+$ || "$DELAY" -lt 1 ]]; then
				error_message "Delay must be a positive integer greater than 0."
			fi
			shift 2
			;;
		-h|--help)
			usage
			exit 0
			;;
		*)
			error_message "Unknown option: $1"
			;;
	esac
done

if [[ -z "$NUMBERS" || -z "$SIM" || "$COUNT" -eq 0 ]]; then
	error_message "You must specify phone numbers (-n), SIM slot (-s), and the number of SMS to send (-c)."
fi

if [[ "$MESSAGE_MODE_COUNT" -eq 0 ]]; then
	error_message "You must specify one of the following: -mt (message text), -mr (random message), or -mf (message file)."
fi

if [[ "$MESSAGE_MODE_COUNT" -gt 1 ]]; then
	error_message "Options -mt, -mr, and -mf are mutually exclusive. Use only one."
fi

check_termux_sms_send

function send_message {
	message="$1"
	for NUMBER in "${NUMBER_LIST[@]}"; do
		for ((i = 0; i < COUNT; i++)); do
			sleep $DELAY
			echo -e "\e[38;5;45mSending to:\e[0m $NUMBER"
			echo -e "\e[38;5;45mMessage:\e[0m $message"
			echo -e "\e[38;5;45mSIM Slot:\e[0m $SIM\n"
			termux-sms-send -n "$NUMBER" -s "$SIM_ID" "$message"
			if [[ -n "$MESSAGE_RANDOM" ]]; then
				message=$(generate_random_message "$MESSAGE_RANDOM")
			fi
		done
	done
}

abort() {
echo -e "\n\e[?25h\n\e[38;5;196mAborting ...\e[K\n"
exit 1
}

trap abort SIGINT

echo -e "\n\e[38;5;45mPress CTRL + C to abort.\e[0m\e[?25l"
echo -e "\e[38;5;196mStarting in 5 ..."
sleep 1
echo -e "\e[1A\e[38;5;202mStarting in 4 ..."
sleep 1
echo -e "\e[1A\e[38;5;220mStarting in 3 ..."
sleep 1
echo -e "\e[1A\e[38;5;190mStarting in 2 ..."
sleep 1
echo -e "\e[1A\e[38;5;46mStarting in 1 ..."
sleep 1
echo -e "\e[1A\e[38;5;86mStarting ...\e[K\e[0m\n\n"

if [[ -n "$MESSAGE_TEXT" ]]; then
	send_message "$MESSAGE_TEXT"
elif [[ -n "$MESSAGE_RANDOM" ]]; then
	for ((i = 0; i < COUNT; i++)); do
		random_message=$(generate_random_message "$MESSAGE_RANDOM")
		send_message "$random_message"
	done
elif [[ -n "$MESSAGE_FILE" ]]; then
	file_content=$(<"$MESSAGE_FILE")
	send_message "$file_content"
fi

echo -e "\n\e[38;5;46mDone!\e[?25h"
